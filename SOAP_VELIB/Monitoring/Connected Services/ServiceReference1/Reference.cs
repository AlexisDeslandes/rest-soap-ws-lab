//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Monitoring.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMonitoringOperation")]
    public interface IMonitoringOperation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getClientCount", ReplyAction="http://tempuri.org/IMonitoringOperation/getClientCountResponse")]
        int getClientCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getClientCount", ReplyAction="http://tempuri.org/IMonitoringOperation/getClientCountResponse")]
        System.Threading.Tasks.Task<int> getClientCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getNumberOfRequestSinceStart", ReplyAction="http://tempuri.org/IMonitoringOperation/getNumberOfRequestSinceStartResponse")]
        int getNumberOfRequestSinceStart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getNumberOfRequestSinceStart", ReplyAction="http://tempuri.org/IMonitoringOperation/getNumberOfRequestSinceStartResponse")]
        System.Threading.Tasks.Task<int> getNumberOfRequestSinceStartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getNumberOfRequestForWSVelib", ReplyAction="http://tempuri.org/IMonitoringOperation/getNumberOfRequestForWSVelibResponse")]
        int getNumberOfRequestForWSVelib();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getNumberOfRequestForWSVelib", ReplyAction="http://tempuri.org/IMonitoringOperation/getNumberOfRequestForWSVelibResponse")]
        System.Threading.Tasks.Task<int> getNumberOfRequestForWSVelibAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getAverageDelayForResponse", ReplyAction="http://tempuri.org/IMonitoringOperation/getAverageDelayForResponseResponse")]
        double getAverageDelayForResponse();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getAverageDelayForResponse", ReplyAction="http://tempuri.org/IMonitoringOperation/getAverageDelayForResponseResponse")]
        System.Threading.Tasks.Task<double> getAverageDelayForResponseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getIPClientsConnected", ReplyAction="http://tempuri.org/IMonitoringOperation/getIPClientsConnectedResponse")]
        string[] getIPClientsConnected();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonitoringOperation/getIPClientsConnected", ReplyAction="http://tempuri.org/IMonitoringOperation/getIPClientsConnectedResponse")]
        System.Threading.Tasks.Task<string[]> getIPClientsConnectedAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonitoringOperationChannel : Monitoring.ServiceReference1.IMonitoringOperation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonitoringOperationClient : System.ServiceModel.ClientBase<Monitoring.ServiceReference1.IMonitoringOperation>, Monitoring.ServiceReference1.IMonitoringOperation {
        
        public MonitoringOperationClient() {
        }
        
        public MonitoringOperationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonitoringOperationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitoringOperationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonitoringOperationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int getClientCount() {
            return base.Channel.getClientCount();
        }
        
        public System.Threading.Tasks.Task<int> getClientCountAsync() {
            return base.Channel.getClientCountAsync();
        }
        
        public int getNumberOfRequestSinceStart() {
            return base.Channel.getNumberOfRequestSinceStart();
        }
        
        public System.Threading.Tasks.Task<int> getNumberOfRequestSinceStartAsync() {
            return base.Channel.getNumberOfRequestSinceStartAsync();
        }
        
        public int getNumberOfRequestForWSVelib() {
            return base.Channel.getNumberOfRequestForWSVelib();
        }
        
        public System.Threading.Tasks.Task<int> getNumberOfRequestForWSVelibAsync() {
            return base.Channel.getNumberOfRequestForWSVelibAsync();
        }
        
        public double getAverageDelayForResponse() {
            return base.Channel.getAverageDelayForResponse();
        }
        
        public System.Threading.Tasks.Task<double> getAverageDelayForResponseAsync() {
            return base.Channel.getAverageDelayForResponseAsync();
        }
        
        public string[] getIPClientsConnected() {
            return base.Channel.getIPClientsConnected();
        }
        
        public System.Threading.Tasks.Task<string[]> getIPClientsConnectedAsync() {
            return base.Channel.getIPClientsConnectedAsync();
        }
    }
}
